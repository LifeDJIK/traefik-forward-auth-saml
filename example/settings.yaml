global:
  debug: false
  disable_auth: false
  # forced_info:
  #   raw:
  #     auth: true
  #     auth_errors: []
  #     auth_nameid: ""
  #     auth_sessionindex: ""
  #     auth_attributes: {}


vault:
  url: https://vault.example.com:8200
  ssl_verify: true
  namespace: some/namespace
  secrets_path: secrets
  secrets_mount_point: kv
  # auth_token: t...n
  # auth_username: u..r
  # auth_password: p......d
  auth_role_id: r....d
  auth_secret_id: s......d


server:
  global:
    environment: production
    engine.signals.on: true
    server.socket_host: 0.0.0.0
    server.socket_port: 80
    server.thread_pool: 8
    server.max_request_body_size: 0
    server.socket_timeout: 60

  "/":
    tools.sessions.on: true
    tools.sessions.name: auth_session_id
    tools.sessions.domain: example.com
    tools.sessions.httponly: true
    tools.sessions.secure: true
    tools.proxy.on: true
    tools.proxy.local: Host
    tools.secureheaders.on: true
    tools.staticdir.on: true
    tools.staticdir.dir: static


endpoints:
  root: "/"
  saml: "/saml"
  oidc: "/oidc"
  info: "/info"
  access_denied: "/access_denied"


auth:
  auth_redirect: "https://auth.example.com/login"
  login_handler: "/saml/login"
  logout_handler: "/saml/logout"
  login_default_redirect_url: https://auth.example.com/
  logout_default_redirect_url: https://auth.example.com/
  logout_allowed_redirect_urls:
  - https://app.example.com/


mappers:
  header:
    example:
      X-WEBAUTH-USER: "'auth_attributes'.'user_name'"
  json:
    example:
      name: "'auth_attributes'.'user_name'"


saml:
  strict: true
  debug: false

  sp:
    entityId: traefik-forward-auth-saml
    assertionConsumerService:
      url: https://auth.example.com/saml/acs
      binding: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST
    singleLogoutService:
      url: https://auth.example.com/saml/sls
      binding: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST
    NameIDFormat: urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
    x509cert: MI...==
    privateKey: MI...==

  idp:
    entityId: https://keycloak.example.com/auth/realms/example
    singleSignOnService:
      url: https://keycloak.example.com/auth/realms/example/protocol/saml
      binding: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST
    singleLogoutService:
      url: https://keycloak.example.com/auth/realms/example/protocol/saml
      binding: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST
    x509cert: MI...aw

  security:
    authnRequestsSigned: true
    logoutRequestSigned: true
    signatureAlgorithm: http://www.w3.org/2001/04/xmldsig-more#rsa-sha256
    digestAlgorithm: http://www.w3.org/2001/04/xmlenc#sha256


oidc:
  debug: false

  provider:
    configuration:
      issuer: "https://keycloak.example.com/auth/realms/example"
      authorization_endpoint: "https://keycloak.example.com/auth/realms/example/protocol/openid-connect/auth"
      token_endpoint: "https://keycloak.example.com/auth/realms/example/protocol/openid-connect/token"
      token_introspection_endpoint: "https://keycloak.example.com/auth/realms/example/protocol/openid-connect/token/introspect"
      userinfo_endpoint: "https://keycloak.example.com/auth/realms/example/protocol/openid-connect/userinfo"
      end_session_endpoint: "https://keycloak.example.com/auth/realms/example/protocol/openid-connect/logout"
      jwks_uri: "https://keycloak.example.com/auth/realms/example/protocol/openid-connect/certs"
      check_session_iframe: "https://keycloak.example.com/auth/realms/example/protocol/openid-connect/login-status-iframe.html"
      grant_types_supported: ["authorization_code","implicit","refresh_token","password","client_credentials"]
      response_types_supported: ["code","none","id_token","token","id_token token","code id_token","code token","code id_token token"]
      subject_types_supported: ["public","pairwise"]
      id_token_signing_alg_values_supported: ["PS384","ES384","RS384","HS256","HS512","ES256","RS256","HS384","ES512","PS256","PS512","RS512"]
      id_token_encryption_alg_values_supported: ["RSA-OAEP","RSA1_5"]
      id_token_encryption_enc_values_supported: ["A128GCM","A128CBC-HS256"]
      userinfo_signing_alg_values_supported: ["PS384","ES384","RS384","HS256","HS512","ES256","RS256","HS384","ES512","PS256","PS512","RS512","none"]
      request_object_signing_alg_values_supported: ["PS384","ES384","RS384","ES256","RS256","ES512","PS256","PS512","RS512","none"]
      response_modes_supported: ["query","fragment","form_post"]
      registration_endpoint: "https://keycloak.example.com/auth/realms/example/clients-registrations/openid-connect"
      token_endpoint_auth_methods_supported: ["private_key_jwt","client_secret_basic","client_secret_post","tls_client_auth","client_secret_jwt"]
      token_endpoint_auth_signing_alg_values_supported: ["PS384","ES384","RS384","ES256","RS256","ES512","PS256","PS512","RS512"]
      claims_supported: ["aud","sub","iss","auth_time","name","given_name","family_name","preferred_username","email","acr"]
      claim_types_supported: ["normal"]
      claims_parameter_supported: False
      scopes_supported: ["openid","offline_access","profile","email","address","phone","roles","web-origins","microprofile-jwt"]
      request_parameter_supported: True
      request_uri_parameter_supported: True
      code_challenge_methods_supported: ["plain","S256"]
      tls_client_certificate_bound_access_tokens: True
      introspection_endpoint: "https://keycloak.example.com/auth/realms/example/protocol/openid-connect/token/introspect"
    registration:
      client_id: c...d
      client_secret: c.....t
      redirect_uris:
      - "https://auth.example.com/oidc/callback"
